// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model Entity {
  id                 Int            @id @default(autoincrement())
  firstName          String
  lastName           String
  visible            Boolean        @default(true)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  RelationshipsAsOne Relationship[] @relation("EntityOne")
  RelationshipsAsTwo Relationship[] @relation("EntityTwo")
}

model TypeRelationship {
  id           Int            @id @default(autoincrement())
  label        String         @unique
  color        String         @unique
  Relationship Relationship[]
}

model Relationship {
  id                 Int              @id @default(autoincrement())
  typeRelationship   TypeRelationship @relation(fields: [typeRelationshipId], references: [id], onDelete: SetDefault)
  entityOne          Entity           @relation("EntityOne", fields: [entityOneId], references: [id], onDelete: Cascade)
  entityTwo          Entity           @relation("EntityTwo", fields: [entityTwoId], references: [id], onDelete: Cascade)
  entityOneId        Int
  entityTwoId        Int
  typeRelationshipId Int
}
